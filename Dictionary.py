# Zadanie treningowe

# Napisz program, kt√≥ry:

# Tworzy s≈Çownik o nazwie osoba z danymi:

# {"imie": "Damian", "miasto": "Krak√≥w", "auto": "Vito"}

# Wypisuje miasto tej osoby

# Dodaje klucz "zawod" o warto≈õci "kierowca"

# Zmienia warto≈õƒá "auto" na "Toyota"

# Wypisuje wszystkie klucze i warto≈õci w formacie:

# imie ‚Üí Damian
# miasto ‚Üí Krak√≥w
# auto ‚Üí Toyota
# zawod ‚Üí kierowca

# info={"imie": "Damian", "miasto": "Krak√≥w", "auto": "Vito"}
# print(info["miasto"])
# info["zawod"]="kierowca"
# info["auto"]="Toyota"
# for n,v in info.items():
#     print(n,"->",v)

# **********************************************************************************************************
# **********************************************************************************************************
# Zadanie 1 ‚Äì Licznik wystƒÖpie≈Ñ s≈Ç√≥w

# Napisz program, kt√≥ry:

# Wczyta tekst od u≈ºytkownika.

# Policz, ile razy ka≈ºde s≈Çowo wystƒÖpi≈Ço.

# Wynik zapisz w s≈Çowniku w formacie:
# {s≈Çowo: liczba_wystƒÖpie≈Ñ}

# Wypisz s≈Çownik.

# üí° Podpowied≈∫:

# u≈ºyj split(), ≈ºeby rozdzieliƒá s≈Çowa

# sprawdzaj if s≈Çowo in dict, ≈ºeby zwiƒôkszyƒá licznik

# Przyk≈Çad:

# Podaj tekst: damian lubi python bo damian uczy siƒô python


# ‚úÖ Wynik:

# {'damian': 2, 'lubi': 1, 'python': 2, 'bo': 1, 'uczy': 1, 'siƒô': 1}
# **********************************************************************************************************
# sentence=input("Wpisz tekst do policzenia ilo≈õci wystƒÖpie≈Ñ: ")
# words=sentence.split()
# word_count={}
# for word in words:
#     word_count[word] = word_count.get(word, 0) + 1
# print(word_count)
# **********************************************************************************************************
# **********************************************************************************************************

# info = {"imie": "Damian","wiek":"12"}
# print(info.get("wiek", "Brak danych"))
# print(info.get("imie", "Brak danych"))
# **********************************************************************************************************
# **********************************************************************************************************
# zadanie: ‚ÄûSprawd≈∫ dane u≈ºytkownika‚Äù

# Masz s≈Çownik:

# user = {"imie": "Damian", "miasto": "Krak√≥w"}

# üîπ Zr√≥b program, kt√≥ry:

# Poprosi u≈ºytkownika o wpisanie klucza, np. "wiek", "miasto", "auto", itd.

# Sprawdzi, czy taki klucz istnieje w s≈Çowniku.

# Je≈õli istnieje ‚Üí wypisze warto≈õƒá.

# Je≈õli nie istnieje ‚Üí wypisze "Brak danych" (u≈ºyj .get()).

# üí° Przyk≈Çadowe dzia≈Çanie:
# Podaj klucz: miasto
# Krak√≥w

# Podaj klucz: wiek
# Brak danych

# **********************************************************************************************************

# user = {"imie": "Damian", "miasto": "Krak√≥w"}
# guess=input("Zgadnij klucz: ")
# print(user.get(guess,"Brak danych"))

# **********************************************************************************************************
# **********************************************************************************************************
# Zadanie 1 ‚Äî sklep

# Masz:

# ceny = {"jab≈Çko": 3, "banan": 4, "gruszka": 5}


# Program:

# pyta u≈ºytkownika o nazwƒô owocu,

# wypisuje cenƒô, je≈õli istnieje,

# albo "Brak w sklepie" je≈õli nie ma.

# **********************************************************************************************************
# ceny = {"jab≈Çko": 3, "banan": 4, "gruszka": 5}
# fruit=input("Podaj nazwƒô owocu: ")
# print(ceny.get(fruit,"Brak w sklepie"))
# **********************************************************************************************************
# **********************************************************************************************************
# Zadanie 2 ‚Äî loginy
# loginy = {"damian": "qwerty", "bartek": "abc123"}


# U≈ºytkownik wpisuje login ‚Üí wypisz has≈Ço, je≈õli istnieje,
# w przeciwnym razie "Nie znaleziono u≈ºytkownika".

# **********************************************************************************************************
# loginy = {"damian": "qwerty", "bartek": "abc123"}
# login=input("Wpisz login: ")
# print(loginy.get(login,"Nie znaleziono u≈ºytkownika"))

# **********************************************************************************************************
# **********************************************************************************************************
# Zadanie 3 ‚Äî kraj i stolica
# kraje = {"Polska": "Warszawa", "Francja": "Pary≈º", "Niemcy": "Berlin"}


# U≈ºytkownik wpisuje nazwƒô kraju.
# Program ma wypisaƒá jego stolicƒô, a je≈õli kraju nie ma ‚Üí "Nie znam takiego kraju"

# **********************************************************************************************************
# kraje = {"Polska": "Warszawa", "Francja": "Pary≈º", "Niemcy": "Berlin"}
# kraj=input("Wpisz nazwe kraju: ")
# print(kraje.get(kraj,"Nie znam takiego kraju"))
# **********************************************************************************************************
# **********************************************************************************************************
# 1Ô∏è‚É£ Dictionary comprehension ‚Äî tworzenie s≈Çownika w jednej linijce

# To taki ‚Äûgenerator‚Äù s≈Çownika, podobny do list comprehension.

# slowa = ["python", "dict", "code"]
# dlugosci = {s: len(s) for s in slowa}
# print(dlugosci)


# ‚û°Ô∏è wynik:

# {'python': 6, 'dict': 4, 'code': 4}


# czyli:

# ‚Äúdla ka≈ºdego s≈Çowa z listy zr√≥b klucz = s≈Çowo, warto≈õƒá = jego d≈Çugo≈õƒá‚Äù

# üí° Idealne do przekszta≈Çcania danych z list.
# **********************************************************************************************************
# slowa = ["python", "dict", "code"]
# dlugosci = {s: len(s) for s in slowa}
# print(dlugosci)
# 2Ô∏è‚É£ Odwracanie s≈Çownika (zamiana kluczy z warto≈õciami)
# kraje = {"Polska": "Warszawa", "Niemcy": "Berlin"}
# stolice = {v: k for k, v in kraje.items()}
# print(stolice)
# **********************************************************************************************************
# 3Ô∏è‚É£ ≈ÅƒÖczenie s≈Çownik√≥w w jeden (Python 3.9+)

# Od wersji Pythona 3.9 mo≈ºesz po prostu:

# a = {"imie": "Damian","miasto":"Rzesz√≥w"}
# b = {"miasto": "Krak√≥w"}
# c = a | b
# print(c)

# Lub nadpisywanie:

# c = a | {"imie": "Bartek"}


# üí° To szybsze ni≈º update() i nie zmienia orygina≈Çu.
# **********************************************************************************************************
# üß± 5Ô∏è‚É£ Zagnie≈ºd≈ºone s≈Çowniki

# Masz dane ‚Äûw ≈õrodku danych‚Äù:

# baza = {
#     "Damian": {"wiek": 28, "auto": "Toyota"},
#     "Bartek": {"wiek": 26, "auto": "BMW"}
# }

# print(baza["Bartek"]["auto"])  # BMW
# # **********************************************************************************************************
# 6Ô∏è‚É£ Zliczanie wystƒÖpie≈Ñ (pro spos√≥b z modu≈Çu collections)

# Nie musisz robiƒá pƒôtli ‚Äî Python ma to gotowe:

# from collections import Counter
# slowa = ["damian", "lubi", "python", "damian", "python", "python"]
# print(dict(Counter(slowa)))
# # **********************************************************************************************************
# # **********************************************************************************************************
# Zadanie 1 ‚Äî Licznik d≈Çugo≈õci s≈Ç√≥w

# Masz listƒô:

# slowa = ["python", "dict", "code", "damian", "ai"]


# Stw√≥rz s≈Çownik, w kt√≥rym:

# klucz = s≈Çowo

# warto≈õƒá = d≈Çugo≈õƒá tego s≈Çowa

# üí° wynik powinien byƒá:
# {'python': 6, 'dict': 4, 'code': 4, 'damian': 6, 'ai': 2}
# # **********************************************************************************************************
# slowa = ["python", "dict", "code", "damian", "ai"]
# licznik_liter={}
# for slowo in slowa:
#     licznik_liter[slowo]=len(slowo)
# print(licznik_liter)

# # **********************************************************************************************************
# # # **********************************************************************************************************
# Zadanie 2 ‚Äî Najlepszy zawodnik

# Masz:

# punkty = {"Damian": 80, "Bartek": 65, "Kuba": 92, "Micha≈Ç": 88}


# Wypisz imiƒô zawodnika, kt√≥ry ma najwiƒôcej punkt√≥w, w formacie:

# Najlepszy: Kuba (92 pkt)
# # # **********************************************************************************************************
# punkty = {"Damian": 80, "Bartek": 65, "Kuba": 92, "Micha≈Ç": 88}
# najlepszy = max(punkty, key=punkty.get)
# print("Najlepszy:", najlepszy, "(", punkty[najlepszy], "pkt)")

punkty = {"Damian": 80, "Bartek": 65, "Kuba": 92, "Micha≈Ç": 88}

najlepszy = max(punkty, key=punkty.get())
print("Najlepszy:", najlepszy, "(", punkty[najlepszy], "pkt)")