# Zadanie 1 â€” prosty input
# ğŸ”¹ Napisz program, ktÃ³ry:
# Poprosi uÅ¼ytkownika o liczbÄ™.
# SprÃ³buje podzieliÄ‡ 100 przez tÄ™ liczbÄ™.
# ObsÅ‚uÅ¼y bÅ‚Ä™dy:
# dzielenie przez zero,
# wprowadzenie tekstu zamiast liczby.
# ğŸ’¡ PodpowiedÅº: uÅ¼yj try, except ZeroDivisionError, except ValueError.
# PrzykÅ‚ad dziaÅ‚ania:
# Podaj liczbÄ™: 0
# Nie dziel przez zero!

# Podaj liczbÄ™: abc
# To nie jest liczba!
# Podaj liczbÄ™: 4
# Wynik: 25.0

# try:
#     number=int(input("Podaj liczbe: "))
#     result=100/number
# except ZeroDivisionError:
#     print("nie dzielimy przez zero! ")
# except ValueError:
#     print("to nie liczba! ")
# else:
#     print(result)
# finally:
#     print("koniec programu!")
# *******************************************************************************************************
# *******************************************************************************************************
# Zadanie 2 â€” lista i IndexError

# Masz listÄ™:

# lista = [10, 20, 30]


# ğŸ”¹ PoproÅ› uÅ¼ytkownika o numer indeksu.
# ğŸ”¹ SprÃ³buj wypisaÄ‡ element o tym indeksie.
# ğŸ”¹ JeÅ›li uÅ¼ytkownik poda indeks spoza zakresu â€” zÅ‚ap IndexError.
# ğŸ”¹ JeÅ›li wpisze coÅ›, co nie jest liczbÄ… â€” zÅ‚ap ValueError.

# lista = [10, 20, 30]
# try:
#     select=int(input("Podaj numer indexu: "))
#     print(lista[select])
# except IndexError:
#     print("podaÅ‚eÅ› nieistniejÄ…cy numer indexu!")
# except ValueError:
#     print("to nie jest liczba")
# else:
#     print("Sukces!")
# *******************************************************************************************************
# *******************************************************************************************************

# Zadanie 3 â€” otwieranie pliku

# ğŸ”¹ SprÃ³buj otworzyÄ‡ plik o nazwie dane.txt.
# ğŸ”¹ JeÅ›li plik nie istnieje â€” zÅ‚ap FileNotFoundError i wypisz komunikat
# "Nie znaleziono pliku!".
# ğŸ”¹ W finally wypisz "ZakoÅ„czono operacjÄ™ pliku.".
# try:
#     file=open("dane.txt")
# except FileNotFoundError:
#     print("nie znaleziono takiego pliku!")
# finally:
#     print("zakoÅ„czono operacjÄ™!")
# *******************************************************************************************************
# *******************************************************************************************************

# Zadanie 4 â€” Å‚Ä…czony except

# ğŸ”¹ ZrÃ³b program, ktÃ³ry prosi uÅ¼ytkownika o:

# licznik (liczba A)

# mianownik (liczba B)

# ğŸ”¹ SprÃ³buj wykonaÄ‡ dzielenie A / B.
# ğŸ”¹ ZÅ‚ap oba bÅ‚Ä™dy (ValueError i ZeroDivisionError) w jednym except, np.:
# try:
#     a=int(input("WprowadÅº licznik: "))
#     b=int(input("WprowadÅº mianownik: "))
#     result=a/b
# except ValueError:
#     print("nie wprowadziÅ‚eÅ› cyfry!")
# except ZeroDivisionError:
#     print("nie dziel przez zero")
# else:
#     print(result)
# finally:
#     print("koniec programu!-")

# *******************************************************************************************************
# *******************************************************************************************************
# Zadanie 5

# Napisz program, ktÃ³ry:

# Prosi uÅ¼ytkownika o podanie liczby.

# PrÃ³buje policzyÄ‡ 10 / liczba.

# JeÅ›li coÅ› pÃ³jdzie nie tak, zÅ‚apie bÅ‚Ä…d za pomocÄ… Exception as e

# Wypisze typ bÅ‚Ä™du i treÅ›Ä‡ bÅ‚Ä™du.

# Na koÅ„cu zawsze wypisze "Koniec programu."
try:
    number=int(input("podaj liczbÄ™: "))
    result=10/number
except Exception as e:
    print("BÅ‚Ä…d typu:",type(e).__name__)
    print("TreÅ›Ä‡ bÅ‚Ä™du:",e)
else:
    print(result)
finally:
    print("Koniec programu!")