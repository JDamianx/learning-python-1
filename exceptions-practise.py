# Zadanie 1 â€” prosty input
# ğŸ”¹ Napisz program, ktÃ³ry:
# Poprosi uÅ¼ytkownika o liczbÄ™.
# SprÃ³buje podzieliÄ‡ 100 przez tÄ™ liczbÄ™.
# ObsÅ‚uÅ¼y bÅ‚Ä™dy:
# dzielenie przez zero,
# wprowadzenie tekstu zamiast liczby.
# ğŸ’¡ PodpowiedÅº: uÅ¼yj try, except ZeroDivisionError, except ValueError.
# PrzykÅ‚ad dziaÅ‚ania:
# Podaj liczbÄ™: 0
# Nie dziel przez zero!

# Podaj liczbÄ™: abc
# To nie jest liczba!

# Podaj liczbÄ™: 4
# Wynik: 25.0
# *******************************************************************************************************
# *******************************************************************************************************
# Zadanie 2 â€” lista i IndexError

# Masz listÄ™:

# lista = [10, 20, 30]


# ğŸ”¹ PoproÅ› uÅ¼ytkownika o numer indeksu.
# ğŸ”¹ SprÃ³buj wypisaÄ‡ element o tym indeksie.
# ğŸ”¹ JeÅ›li uÅ¼ytkownik poda indeks spoza zakresu â€” zÅ‚ap IndexError.
# ğŸ”¹ JeÅ›li wpisze coÅ›, co nie jest liczbÄ… â€” zÅ‚ap ValueError.
# *******************************************************************************************************
# *******************************************************************************************************

# Zadanie 3 â€” otwieranie pliku

# ğŸ”¹ SprÃ³buj otworzyÄ‡ plik o nazwie dane.txt.
# ğŸ”¹ JeÅ›li plik nie istnieje â€” zÅ‚ap FileNotFoundError i wypisz komunikat
# "Nie znaleziono pliku!".
# ğŸ”¹ W finally wypisz "ZakoÅ„czono operacjÄ™ pliku.".
# *******************************************************************************************************
# *******************************************************************************************************

# Zadanie 4 â€” Å‚Ä…czony except

# ğŸ”¹ ZrÃ³b program, ktÃ³ry prosi uÅ¼ytkownika o:

# licznik (liczba A)

# mianownik (liczba B)

# ğŸ”¹ SprÃ³buj wykonaÄ‡ dzielenie A / B.
# ğŸ”¹ ZÅ‚ap oba bÅ‚Ä™dy (ValueError i ZeroDivisionError) w jednym except, np.: